@model GoodShoe.ViewModels.EditProfileViewModel

@{
ViewData["Title"] = "Account Profile Edit";
}

<style>
    .edit-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 40px 20px;
        min-height: 100vh;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
        padding: 30px 0;
        background-color: #e8e2d5;
        border-radius: 8px;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 300;
        margin-bottom: 10px;
        color: #8b7355;
    }

    .page-subtitle {
        font-size: 1.1rem;
        color: #9d8b73;
    }

    .edit-section {
        background: white;
        margin-bottom: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(139, 115, 85, 0.1);
        border: 1px solid #e8e2d5;
        overflow: hidden;
    }

    .section-header {
        background-color: #d4c4a8;
        padding: 20px 25px;
        border-bottom: 1px solid #c4b49d;
    }

    .section-title {
        font-size: 1.3rem;
        font-weight: 400;
        color: #6b5b4d;
        margin: 0;
    }

    .section-content {
        padding: 25px;
    }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .form-group {
        flex: 1;
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
        color: #8b7355;
        font-size: 0.95rem;
    }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #d4c4a8;
        border-radius: 4px;
        font-size: 0.95rem;
        background-color: white;
        color: #6b5b4d;
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #b3a085;
        box-shadow: 0 0 0 3px rgba(180, 160, 133, 0.1);
    }

    .form-control::placeholder {
        color: #9d8b73;
    }

    .validation-error {
        color: #d54335;
        font-size: 0.85rem;
        margin-top: 5px;
        display: block;
    }

    .alert-success {
        padding: 15px 20px;
        border-radius: 6px;
        margin-bottom: 25px;
        background-color: #f0ede6;
        color: #6b5b4d;
        border: 1px solid #d4c4a8;
    }

    .alert-error {
        padding: 15px 20px;
        border-radius: 6px;
        margin-bottom: 25px;
        background-color: #fdeaea;
        color: #d54335;
        border: 1px solid #f5c6cb;
    }

    .edit-buttons {
        display: flex;
        gap: 15px;
        margin-top: 30px;
        justify-content: center;
    }

    .edit-button {
        padding: 12px 30px;
        border-radius: 4px;
        font-weight: 400;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        font-size: 0.95rem;
        border: 1px solid;
        transition: all 0.3s ease;
        min-width: 140px;
    }

    .btn-save {
        background-color: #d4c4a8;
        color: #6b5b4d;
        border-color: #d4c4a8;
    }

    .btn-save:hover {
        background-color: #b3a085;
        border-color: #b3a085;
        transform: translateY(-1px);
    }

    .btn-cancel {
        background-color: #f0ede6;
        color: #6b5b4d;
        border-color: #f0ede6;
    }

    .btn-cancel:hover {
        background-color: #e8e2d5;
        border-color: #e8e2d5;
        transform: translateY(-1px);
    }

    .back-link {
        display: inline-flex;
        align-items: center;
        color: #8b7355;
        text-decoration: none;
        font-size: 0.9rem;
        margin-bottom: 20px;
        padding: 6px 10px;
        background-color: #d4c4a8;
        border-radius: 4px;
    }

    .back-link:hover {
        color: #6b5b4d;
        text-decoration: none;
    }

    .back-link::before {
        content: "←";
        margin-right: 8px;
        font-size: 1.1rem;
    }

    .form-info {
        background-color: #f9f7f3;
        border: 1px solid #e8e2d5;
        border-radius: 4px;
        padding: 15px;
        margin-bottom: 20px;
        font-size: 0.9rem;
        color: #6b5b4d;
    }

    .required-field {
        color: #d54335;
    }
</style>

<div class="edit-container">
    <!-- Back Link -->
    <a href="@Url.Action("Index")" class="back-link">Back to Profile</a>

    <!-- Page Header -->
    <div class="page-header">
        <h1 class="page-title">Edit Profile</h1>
        <p class="page-subtitle">Update your personal information and contact details</p>
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert-error">
            @TempData["Error"]
        </div>
    }

    <form asp-action="Edit" method="post">
        @Html.AntiForgeryToken()
        
        <!-- Personal Information Section -->
        <div class="edit-section">
            <div class="section-header">
                <h2 class="section-title">Personal Information</h2>
            </div>
            <div class="section-content">
                <div class="form-info">
                    <strong>Note:</strong> Fields marked with <span class="required-field">*</span> are required. Changes will be saved to your account immediately.
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="FirstName" class="form-label">
                            First Name <span class="required-field">*</span>
                        </label>
                        <input asp-for="FirstName" class="form-control" placeholder="Enter your first name" />
                        <span asp-validation-for="FirstName" class="validation-error"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="LastName" class="form-label">
                            Last Name <span class="required-field">*</span>
                        </label>
                        <input asp-for="LastName" class="form-control" placeholder="Enter your last name" />
                        <span asp-validation-for="LastName" class="validation-error"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="form-label">
                        Email Address <span class="required-field">*</span>
                    </label>
                    <input asp-for="Email" type="email" class="form-control" placeholder="Enter your email address" />
                    <span asp-validation-for="Email" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                    <input asp-for="PhoneNumber" type="tel" class="form-control" placeholder="e.g., +65 9123 4567" />
                    <span asp-validation-for="PhoneNumber" class="validation-error"></span>
                </div>
            </div>
        </div>

        <!-- Address Information Section -->
        <div class="edit-section">
            <div class="section-header">
                <h2 class="section-title">Address Information</h2>
            </div>
            <div class="section-content">
                <div class="form-group">
                    <label asp-for="Address" class="form-label">Address</label>
                    <input asp-for="Address" class="form-control" placeholder="Enter your full address (e.g., 123 Main Street, Singapore 123456)" />
                    <span asp-validation-for="Address" class="validation-error"></span>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="edit-buttons">
            <button type="submit" class="edit-button btn-save">Save Changes</button>
            <a href="@Url.Action("Index")" class="edit-button btn-cancel">Cancel</a>
        </div>
    </form>
</div>

<script>
    // Add some interactive feedback
    document.addEventListener('DOMContentLoaded', function() {
        // Focus on first input field
        const firstInput = document.querySelector('.form-control');
        if (firstInput) {
            firstInput.focus();
        }

        // Add real-time validation feedback
        const inputs = document.querySelectorAll('.form-control');
        inputs.forEach(function(input) {
            input.addEventListener('input', function() {
                // Remove error styling when user starts typing
                this.style.borderColor = '#d4c4a8';
                
                // Find associated error span
                const errorSpan = this.parentNode.querySelector('.validation-error');
                if (errorSpan && this.value.trim()) {
                    errorSpan.style.display = 'none';
                }
            });

            input.addEventListener('blur', function() {
                // Basic validation on blur (server will handle email validation)
                if (this.hasAttribute('required')) {
                    if (!this.value.trim()) {
                        this.style.borderColor = '#d54335';
                    } else {
                        this.style.borderColor = '#b3a085';
                    }
                }
            });
        });

        // Form submission validation
        const form = document.querySelector('form');
        form.addEventListener('submit', function(e) {
            let hasErrors = false;
            
            // Check required fields only (let server handle email validation)
            const requiredInputs = form.querySelectorAll('input[data-val-required]');
            requiredInputs.forEach(function(input) {
                if (!input.value.trim()) {
                    input.style.borderColor = '#d54335';
                    hasErrors = true;
                }
            });

            if (hasErrors) {
                e.preventDefault();
                
                // Scroll to first error
                const firstError = form.querySelector('input[style*="border-color: rgb(213, 67, 53)"]');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstError.focus();
                }
            } else {
                // Show loading state on submit button
                const submitBtn = form.querySelector('button[type="submit"]');
                submitBtn.innerHTML = 'Saving Changes...';
                submitBtn.style.opacity = '0.7';
                submitBtn.disabled = true;
            }
        });
    });
</script>