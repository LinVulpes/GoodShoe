<!-- Tells Razor that this view expects to receive a 
list of CartItem objects as its model (the items in the user's cart) -->
@model List<GoodShoe.Models.ViewModels.CartItem>

<!--Heading for Cart Page-->
<h2>Your Cart</h2>

<!--Check out button form-->
<!--Navigates to Check out page-->
<form asp-controller="Order" asp-action="Checkout" method="get" style="display:inline;">
    <button type="submit" class="btn btn-primary"
    @(Model == null || !Model.Any() ? "disabled" : "")>
        Check Out
    </button>
</form>

<!--Continue Shopping button form-->
<!--Navigates to Products (e.g. new arrivals, other products)-->
<form asp-controller="Home" asp-action="Products" method="get" style="display:inline; margin-left:10px;">
    <button type="submit" class="btn btn-secondary">
        Continue Shopping
    </button>
</form>

<!--If the cart is empty (or not created yet), 
display a message "Your cart is empty" to the user.-->
@if (Model == null || !Model.Any())
{
    <p>Your cart is empty.</p>
}

else

{
    <!-- If there are items in the cart, it will show cart items'
        name, image, price, quantity, subtotal, action: remove button-->
    <table>
        <tr>
            <th>Name</th>
            <th>Image</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Subtotal</th>
            <th>Action</th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td><img src="@item.ImageUrl" width="60" /></td>
                <td>@item.Price.ToString("C")</td>
                <td>@item.Quantity</td>
                <td>@(item.Price * item.Quantity).ToString("C")</td>
                <td>
                    <!--Remove button-->
                    <!--Remove item from cart-->
                    <form asp-action="RemoveFromCart" method="post">
                        <input type="hidden" name="productId" value="@item.ProductId" />
                        <button type="submit">Remove</button>
                    </form>
                </td>
            </tr>
        }
    </table>

<!--sum of all subtotals-->
    <p><strong>Total:</strong> @Model.Sum(i => i.Price * i.Quantity).ToString("C")</p>

}
