@model GoodShoe.Models.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Products Page";
}

<div class="container main-context">
    <!-- Title Section -->
    <div class="title-section">
        <h1 class="main-title"> New Arrival </h1>
        <p class="subtitle">Good Shoes is a modern e-commerce website offering a stylish and high-quality collection of shoes to elevate every step you take.</p>
    </div>

    <!-- Filter and Sort Section -->
    <div class="row">
        <div class="col-md-12">
            <div class="filter-section">
                <div class="row">
                    <!-- Filter DropDown for Gender Category (Men, Women, Unisex) -->
                    <div class="col-auto">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle filter-btn" type="button" data-bs-toggle="dropdown">
                                Filter: @(string.IsNullOrEmpty(Model.GenderFilter) ? "All" : Model.GenderFilter)
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item @(string.IsNullOrEmpty(Model.GenderFilter) ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { sortOrder = Model.SortOrder, searchString = Model.CurrentFilter })">
                                        All
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.GenderFilter == "Men" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { genderFilter = "Men", sortOrder = Model.SortOrder, searchString = Model.CurrentFilter })">
                                        Men
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.GenderFilter == "Women" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { genderFilter = "Women", sortOrder = Model.SortOrder, searchString = Model.CurrentFilter })">
                                        Women
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.GenderFilter == "Unisex" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { genderFilter = "Unisex", sortOrder = Model.SortOrder, searchString = Model.CurrentFilter })">
                                        Unisex
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                    <!-- Sort Dropdown (Name and Price) -->
                    <div class="col-auto">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle filter-btn" type="button" data-bs-toggle="dropdown">
                                Sort: @(GetSortDisplayName(Model.SortOrder))
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item @(Model.SortOrder == "name_asc" || string.IsNullOrEmpty(Model.SortOrder) ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { sortOrder = "name_asc", genderFilter = Model.GenderFilter, searchString = Model.CurrentFilter })">
                                        Name A-Z
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.SortOrder == "name_desc" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { sortOrder = "name_desc", genderFilter = Model.GenderFilter, searchString = Model.CurrentFilter })">
                                        Name Z-A
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.SortOrder == "price_asc" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { sortOrder = "price_asc", genderFilter = Model.GenderFilter, searchString = Model.CurrentFilter })">
                                        Price Low-High
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.SortOrder == "price_desc" ? "active" : "")" 
                                       href="@Url.Action("Products", "Home", new { sortOrder = "price_desc", genderFilter = Model.GenderFilter, searchString = Model.CurrentFilter })">
                                        Price High-Low
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                    <!-- Search Filter (Product Name) -->
                    <div class="col-auto">
                        <form asp-controller="Home" asp-action="Products" method="get">
                            <div class="search-input-group">
                                <input type="text" 
                                       name="searchString" 
                                       value="@Model.CurrentFilter" 
                                       class="search-input" 
                                       placeholder="Search product" />
                                <button type="submit" class="search-button">
                                    <img src="~/search-icon.png" alt="Search" class="search-icon" />
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Products Grid -->
    <div class="products-grid">
        @foreach (var product in Model.Products)
        {
            <a asp-controller="Shop" asp-action="Details" asp-route-id="@product.Id" class="text-decoration-none">
                <div class="product-card">
                    <div class="product-image">
                        <img src="@product.ImageUrl" 
                             alt="@product.Name" 
                             onerror="this.src='/images/products/placeholder.jpg';" 
                             loading="lazy" />
                    </div>                
                    <div class="product-info">
                        <h5 class="product-name">@product.Name</h5>
                        <p class="product-price">$@product.Price</p>
                        <p class="product-description">@product.Description</p>
                    </div>
                </div>
            </a>
        }
    </div>
    
    @if (!Model.Products.Any())
    {
        <div class="no-products">
            <h3>No products found</h3>
            <p>Try adjusting your filters or search criteria.</p>
        </div>
    }
</div>

@functions {
    private string GetSortDisplayName(string sortOrder)
    {
        return sortOrder switch
        {
            "name_desc" => "Name Z-A",
            "price_asc" => "Price Low-High",
            "price_desc" => "Price High-Low",
            _ => "Name A-Z"
        };
    }
}