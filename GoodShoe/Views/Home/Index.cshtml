@model GoodShoe.Models.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container main-context">
    <!-- Title Section -->
    <div class="title-section">
        <h1 class="main-title"> New Arrival </h1>
        <p class="subtitle">Good Shoes is a modern e-commerce website offering a stylish and high-quality collection of shoes to elevate every step you take.</p>
    </div>
    <!-- Gender Navigation -->
    <div class="gender-navigation mb-4">
        <div class="row">
            <div class="col-md-12">
                <div class="gender-filters">
                    <a href="@Url.Action("Index", "Home")" 
                       class="btn @(string.IsNullOrEmpty(Model.GenderFilter) ? "btn-dark" : "btn-outline-secondary") me-2">
                        All (@Model.TotalProducts)
                    </a>
                    <a href="@Url.Action("Index", "Home", new { genderFilter = "Men" })" 
                       class="btn @(Model.GenderFilter == "Men" ? "btn-dark" : "btn-outline-secondary") me-2">
                        Men (@Model.MenCount)
                    </a>
                    <a href="@Url.Action("Index", "Home", new { genderFilter = "Women" })" 
                       class="btn @(Model.GenderFilter == "Women" ? "btn-dark" : "btn-outline-secondary") me-2">
                        Women (@Model.WomenCount)
                    </a>
                    <a href="@Url.Action("Index", "Home", new { genderFilter = "Unisex" })" 
                       class="btn @(Model.GenderFilter == "Unisex" ? "btn-dark" : "btn-outline-secondary")">
                        Unisex (@Model.UnisexCount)
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter and Sort Section -->
    <div class="row">
        <div class="col-md-12">
            <div class="filter-section">
                <div class="row">
                    <div class="col-md-2">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle filter-btn" type="button" data-bs-toggle="dropdown">
                                Filter
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "", genderFilter = Model.GenderFilter })">Default</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "Price", genderFilter = Model.GenderFilter })">Price Low-High</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "price_desc", genderFilter = Model.GenderFilter })">Price High-Low</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle filter-btn" type="button" data-bs-toggle="dropdown">
                                Sort
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "", genderFilter = Model.GenderFilter })">Name A-Z</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "name_desc", genderFilter = Model.GenderFilter })">Name Z-A</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "Price", genderFilter = Model.GenderFilter })">Price Low-High</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortOrder = "price_desc", genderFilter = Model.GenderFilter })">Price High-Low</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Products Grid -->
    <div class="products-grid">
        @foreach (var product in Model.Products)
        {
            <div class="product-card" onclick="redirectToProduct(@product.Id)">
                <div class="product-info">
                    <h5 class="product-name">@product.Name</h5>
                    <p class="product-price">$@product.Price</p>
                </div>
            </div>
        }
    </div>

    @if (!Model.Products.Any())
    {
        <div class="no-products">
            <h3>No products found</h3>
            <p>Try adjusting your filters or search criteria.</p>
        </div>
    }
</div>

<script>
function redirectToProduct(productId) {
    window.location.href = '@Url.Action("Details", "Product")' + '/' + productId;
}
</script>